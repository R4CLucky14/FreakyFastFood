@model FFF.ViewModels.Profile.PersonalInput
@using ( Html.BeginForm( "EditPersonalConfirmed", "Profile", FormMethod.Post, new { id = "ModalForm", @for="#PersonalContent" } ) )
{
	@Html.AntiForgeryToken()

	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
		<h3>Editing Your Personal Profile</h3>
	</div>
	<div class="modal-body">
		<span class="help-inline field-validation-error">
		</span>
		@Html.HiddenFor( c => c.RID)
		@Html.HiddenFor( c => c.UserName )
		<div class="form-group">			
			<label class="control-label">Account ID</label>
			<p class="form-control-static">@Html.DisplayFor( m => m.RID )</p>
			@Html.DescriptionFor(m => m.RID)
		</div>
		<div class="form-group">
			@Html.LabelFor(c => c.UserName)
			<p class="form-control-static">@Html.DisplayFor( m => m.UserName )</p>
		</div>
		<div class="form-group">
			@Html.LabelFor( c => c.FirstName )
			@Html.TextBoxFor( m => m.FirstName, new { @class = "form-control" } )
			@Html.ValidationMessageFor( m => m.FirstName, null, new { @class = "help-inline" } )
		</div>
		<div class="form-group">
			@Html.LabelFor( c => c.LastName )
			@Html.TextBoxFor( m => m.LastName, new { @class = "form-control" } )
			@Html.ValidationMessageFor( m => m.LastName, null, new { @class = "help-inline" } )
		</div>
		<div class="form-group">
			@Html.LabelFor( c => c.GenderID )
			@Html.DropDownListFor( m => m.GenderID, ViewBag.Gender as SelectList, "Select Gender", new { @class = "form-control" } )
			@Html.ValidationMessageFor( m => m.GenderID, null, new { @class = "help-inline" } )
		</div>
	</div>
	<div class="modal-footer">
		<a href="#" class="btn" data-dismiss="modal">Cancel</a>
		<button type="submit" class="btn btn-primary">
			<span class="glyphicon glyphicon-floppy-disk">
			</span>
			Save Changes
		</button>
	</div>
}

