<!DOCTYPE html>
@{
	Layout = null;
}

<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<meta name="application-name" content="Freaky Fast Food" />
		<meta name="msapplication-square70x70logo" content="@Url.Content("~/Content/Images/tiny.png")" />
		<meta name="msapplication-square150x150logo" content="@Url.Content( "~/Content/Images/square.png" )" />
		<meta name="msapplication-wide310x150logo" content="@Url.Content( "~/Content/Images/wide.png" )" />
		<meta name="msapplication-square310x310logo" content="@Url.Content( "~/Content/Images/large.png" )" />
		<meta content="name=My Account;
				  action-uri=./Account;
				  icon-uri=./favicon.ico" name="msapplication-task">
		<link rel="shortcut icon" href="favicon.ico" />
		<title>@ViewBag.Title - FreakyFastFood</title>
		@Styles.Render( "~/Content/css" )
		@Scripts.Render( "~/bundles/jquery" )
		<script src="~/signalr/hubs"></script>
		<script>
	@*$(function ()
	{
		
				// Reference the auto-generated proxy for the hub.
				var account = $.connection.accountHub;
				// Create a function that the hub can call back to display messages.
				account.client.updateAddressList = function (addresses)
				{
					console.log("We are up!");
					console.log(addresses);
					addresses.forEach(function (entry)
					{
						console.log(entry);
						$('#accountSignalR').append(addresses);
					});
				};
				// Start the connection.
				$.connection.hub.start().done(function ()
				{
					console.log("We are here!");
					account.server.addressList();
				});
			});
			*@
			$(function ()
			{
				function AddressViewModel(rid, nick, line1, line2, city, state, zip)
				{
					this.rid = rid;
					this.nick = nick;
					this.line1 = line1;
					this.line2 = line2;
					this.city = city;
					this.state = state;
					this.zip = zip;
					console.log('We made an AVM :)');
					console.log(this);
				}

				function AddressesViewModel()
				{
					console.log("Starting View Model!!");
					this.hub = $.connection.accountHub;
					this.addresses = ko.observableArray([]);
					this.newAddress = ko.observable();


					var addresses = this.addresses;
					var newAddress = this.newAddress;

					this.init = function ()
					{
						console.log("Calling Get All!!");
						this.hub.server.getAll();
					}

					this.hub.client.addressesAll = function (addressesAll)
					{
						$.map(addressesAll, function (item)
						{
							addresses.push(new AddressViewModel(item.ID, item.Nick, item.Line1, item.Line2, item.CityTitle, item.StateAbbreviation, item.ZIP))
						});
					}
				}
				addressesVM = new AddressesViewModel()
				ko.applyBindings(addressesVM);
				$.connection.hub.start(function () { addressesVM.init(); });
			});
		</script>
	</head>
	<body>
		<H2>
			This is our awesome tester page. No layout. No nothing. WYSIWYG :)
		</H2>

		<p>This is Index.cshtml. We will be running some SignalR Tests. We will be testing both logged in and logged out functions.</p>

		<p>First Test: Get some of our Account info via SignalR:</p>
		<div id="accountSignalR">
			We want this gone. But more importantly:
		</div>
		<div id="address" data-bind="template: {name: 'AddressTemplate', foreach: addresses }">
			This is the knockout template div. We want this to be something with
		</div>
</body>
</html>

<script type="text/html" id="AddressTemplate">
	<address style="height:90px">
		<strong data-bind="text: nick"></strong><br>
		<span data-bind="text: line1"></span><br>
		<span data-bind="text: line2"></span><br>
		<span data-bind="text: city"></span>, <span data-bind="	text: state"></span><span data-bind="	text: zip"></span>
	</address>
</script>