<!DOCTYPE html>
@{
	Layout = null;
}

<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<meta name="application-name" content="Freaky Fast Food" />
		<meta name="msapplication-square70x70logo" content="@Url.Content("~/Content/Images/tiny.png")" />
		<meta name="msapplication-square150x150logo" content="@Url.Content( "~/Content/Images/square.png" )" />
		<meta name="msapplication-wide310x150logo" content="@Url.Content( "~/Content/Images/wide.png" )" />
		<meta name="msapplication-square310x310logo" content="@Url.Content( "~/Content/Images/large.png" )" />
		<meta content="name=My Account;
				  action-uri=./Account;
				  icon-uri=./favicon.ico" name="msapplication-task">
		<link rel="shortcut icon" href="favicon.ico" />
		<title>@ViewBag.Title - FreakyFastFood</title>
		@Styles.Render( "~/Content/css" )
		@Scripts.Render( "~/bundles/jquery" )
		<script src="~/signalr/hubs"></script>
		<script>
			$(function ()
			{
				function AddressViewModel(rid, nick, line1, line2, city, state, zip)
				{
					this.rid = ko.observable(rid);
					this.nick = ko.observable(nick);
					this.line1 = ko.observable(line1);
					this.line2 = ko.observable(line2);
					this.city = ko.observable(city);
					this.state = ko.observable(state);
					this.zip = ko.observable(zip);
					console.log('We made an AVM :)');
					console.log(this);

					this.editURL = 'Account/Address/Edit/' + rid;
					this.deleteURL = 'Account/Address/Delete/' + rid;
				}
				function AddressesViewModel()
				{
					console.log("Starting View Model!!");
					this.hub = $.connection.addressHub;
					this.addresses = ko.observableArray([]);
					this.newAddress = ko.observable();

					var addresses = this.addresses;
					var newAddress = this.newAddress;

					this.init = function ()
					{
						console.log("Calling Get All!!");
						this.hub.server.index();
					}
					this.hub.client.addressesAll = function (addressesAll)
					{
						console.log("All Addresses Returned!!!");
						$.map(addressesAll, function (item)
						{
							addresses.push(new AddressViewModel(item.ID, item.Nick, item.Line1, item.Line2, item.CityTitle, item.StateAbbreviation, item.ZIP));
						});
						console.log("All Addresses Added to ArrayList");
					}


					this.createModal = function ()
					{
						this.hub.server.create();
					}
					this.hub.client.CreateBack = function (AddressInput)
					{
						this.displayMode = "AddressCreateTemplate";
					}
					this.editModal = function(addressID)
					{
						this.hub.server.edit(addressID);
					}
					this.hub.client.EditBack = function (AddressInput)
					{
						this.displayMode = "AddressEditTemplate";
					}
					this.deleteModal = function (addressID)
					{
						this.hub.server.remove(addressID);
					}
					this.hub.client.RemoveBack = function (Address)
					{
						this.displayMode = "AddressRemoveTemplate";
					}

					this.post = function (address)
					{
						this.hub.server.post(address);
					}
					this.hub.client.PostBack = function (Address)
					{
						this.addresses.push(new AddressesViewModel(Address.ID, Address.Nick, Address.Line1, Address.Line2, Address.CityTitle, Address.StateAbbreviation, Address.ZIP));
					}

					this.put = function (address)
					{
						this.hub.server.put(address);
					}
					this.hub.client.PutBack = function (Address)
					{
						var addressVM = ko.utils.arrayFilter(addresses(), function (item)
						{
							return Address.ID == item.rid;
						});
						addressVM.nick(Address.Nick);
						addressVM.line1(Address.Line1);
						addressVM.line2(Address.Line2);
						addressVM.city(Address.CityTitle);
						addressVM.state(Address.StateAbbreviation);
						addressVM.zip(Address.ZIP);
					}

					this.delete = function (address)
					{
						this.hub.server.delete(address);
					}
					this.hub.client.DeleteBack = function (Address)
					{
						this.addresses.remove(function(item) { return item.rid == Address.ID }) 
					}


					this.hub.client.StateList = function (stateList)
					{
						
					}
				}


				addressesVM = new AddressesViewModel()
				ko.applyBindings(addressesVM);
				$.connection.hub.start(function () { addressesVM.init(); });
			});
		</script>
	</head>
<body>
	<div class="container">
		<div class="modal fade" id="Modal">
			<div class="modal-dialog">
				<div class="modal-content" id="ModalContent" data-bind="template: { template: displayMode }">

				</div>
			</div>
		</div>
		<h2>
			This is our awesome tester page. No layout. No nothing. WYSIWYG :)
		</h2>

		<p>This is Index.cshtml. We will be running some SignalR Tests.</p>

		<p>First Test: Get some of our Account info via SignalR:</p>
		<div class="row" id="address" data-bind="template: { name: 'AddressTemplate', foreach: addresses }">
		</div>
	</div>
</body>
</html>

<script type="text/html" id="AddressTemplate">
	<div class="col-lg-3 col-xs-6 col-sm-4 well well-sm">
		<address style="height:90px">
			<strong data-bind="text: nick"></strong><br>
			<span data-bind="text: line1"></span><br>
			<span data-bind="text: line2"></span><br>
			<span data-bind="text: city"></span>, <span data-bind="text: state"></span> <span data-bind="text: zip"></span>
		</address>
		<div class="col-xs-4">
			<form data-bind="submit: editModal" method="get">
				<button class="btn btn-info LoadModal">
					<span class=" glyphicon glyphicon-edit">
					</span>
					Edit
				</button>
			</form>
		</div>
		<div class="col-xs-8">
			<form>
				<button class="btn btn-danger LoadModal" data-bind="attr: { href: deleteURL }">
					<span class="glyphicon glyphicon-remove">
					</span>
					Delete
				</button>
			</form>
		</div>
	</div>
</script>

<script type="text/html" id="AddressEditTemplate">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
		<h3>Editing <span data-bind="text: nick"></span> Address</h3>
	</div>
	<div class="modal-body">
		<span class="help-inline field-validation-error">
		</span>
		<p>This is our awesome edit Modal!!!!</p>
	</div>
	<div class="modal-footer">
		<a href="#" class="btn" data-dismiss="modal">Cancel</a>
		<button type="submit" class="btn btn-primary">
			<span class="glyphicon glyphicon-floppy-disk">
			</span>
			Save Changes
		</button>
	</div>
</script>

<script id="AddressCreateTemplate">


</script>

<script id="AddressRemoveTemplate">


</script>
